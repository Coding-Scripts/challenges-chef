---
driver:
  name: docker
driver_config:
  # http_proxy: <%= ENV.fetch('HTTP_PROXY', "http://172.17.42.1:3128") %>
  # https_proxy: <%= ENV.fetch('HTTPS_PROXY', "http://172.17.42.1:3128") %>
  instance_name: <%= ENV.fetch('INSTANCE_NAME', "all-in-one") %>
  hostname: <%= ENV.fetch('INSTANCE_NAME', "all-in-one") %>
  use_sudo: false
  privileged: true
  remove_images: false
  image: <%= ENV.fetch('IMAGE_NAME', "totvslabs/mdm:v1.1") %>
  tls_verify: true
  tls_cacert: <%= ENV.fetch('TLS_FOLDER', "../../env_setup/tls") %>/ca.pem
  tls_cert: <%= ENV.fetch('TLS_FOLDER', "../../env_setup/tls") %>/cert.pem
  tls_key: <%= ENV.fetch('TLS_FOLDER', "../../env_setup/tls") %>/key.pem
  socket: tcp://172.17.0.1:4243
  provision_command: "curl -L https://raw.githubusercontent.com/TOTVS/mdmpublic/tag_v5/chef/chef_kitchen_provision.sh | bash -e"
  <% if ENV.fetch('DOCKER_PORT_FORWARD_PREFIX', "") != "" %>
  forward:
  - <%= ENV.fetch('DOCKER_PORT_FORWARD_PREFIX', "21") %>080:80
  - <%= ENV.fetch('DOCKER_PORT_FORWARD_PREFIX', "21") %>543:443
  - <%= ENV.fetch('DOCKER_PORT_FORWARD_PREFIX', "21") %>081:8081
  - <%= ENV.fetch('DOCKER_PORT_FORWARD_PREFIX', "21") %>443:8443
  <% end %>
  volume:
  - <%= ENV.fetch('DOCKER_VOLUME', "/data/docker/all-in-one/couchbase") %>/<%= ENV.fetch('JOB_NAME', "") %>:/opt/couchbase/
transport:
   username: kitchen

provisioner:
  name: chef_zero
  require_chef_omnibus: 12.17.44
  data_path: test/shared
  client_rb:
      file_cache_path: "/var/chef/cache"

platforms:
  - name: ubuntu-14.04

suites:
  - name: default
    run_list:
      - recipe[justniffer::default]
      - recipe[justniffer::start]
      - recipe[all-in-one::default]
    attributes:
        {common_basic:
                {app_branch_name: '<%= ENV.fetch('APP_BRANCH_NAME', "") %>',
                framework_branch_name: '<%= ENV.fetch('FRAMEWORK_BRANCH_NAME', "") %>',
                devops_branch_name: '<%= ENV.fetch('branch_name', "") %>',
                backup_hosts: ["<%= ENV.fetch('INSTANCE_NAME', "all-in-one") %>"],
                haproxy_hosts: ["<%= ENV.fetch('INSTANCE_NAME', "all-in-one") %>"],
                haproxy_port: '80',
                haproxy_ssl_port: '443',
                package_url: '<%= ENV.fetch('PACKAGE_URL', "http://repo.carol.ai:18000") %>',
                mdm_domain_name: 'app.carol.ai',
                nagios_username: 'nagiosadmin',
                nagios_password: 'password1234',
                nagios_server: '127.0.0.1',
                app_http_port: '8080',
                app_https_port: '8443',
                nagios_http_port: '8085',
                hack_hosts_file: "true"
                },
         os_basic:
                {enable_firewall: 'true',
                simulate_no_network: '<%= ENV.fetch('SIMULATE_NO_NETWORK', "0") %>'},
         all_in_one:
                {mgmt_timeout: '900000',
                max_timeout: '960000',
                enable_audit_elasticsearch: 'true'
                },
         nagios_mdm:
                {es_min_replica_count: "0",
                 es_min_shard_count: "1",
                 es_max_shard_size: "1gb",
                 slack_token: '<%= ENV.fetch('NAGIOS_SLACK_TOKEN', "") %>',
                 slack_cri_channel: 'slack_ci_test',
                 slack_all_channel: 'slack_ci_test',
                 change_localhost_cfg: '0'
                },
         couchbase_mdm:
                {memory_quota_mb: '2560'
                },
         elasticsearch_mdm:
                {allocated_memory_mb: '512',
                audit_allocated_memory_mb: '256',
                es_network_host: '<%= ENV.fetch('INSTANCE_NAME', "all-in-one") %>',
                elasticsearch_clustername: 'totvs_<%= ENV.fetch('JOB_NAME', "") %>_<%= ENV.fetch('BUILD_ID', "") %>es',
                elasticsearch_audit_clustername: 'totvs_audit_<%= ENV.fetch('JOB_NAME', "") %>_<%= ENV.fetch('BUILD_ID', "") %>es'
                },
         app_mdm:
                {cb_bucket_retries: '10',
                cb_bucket_retryinterval: '10000',
                cb_bucket_timeout: '100000',
                google_keys: 'fake_key1,fake_key2',
                log_level: 'DEBUG',
                whether_flushdatabaseonconnect: 'true',
                whether_populatefakedata: 'true',
                whether_populaterealdata: 'true',
                # couchbase
                session_bucket_quota_in_mb: '100',
                staging_bucket_quota_in_mb: '1024',
                master_bucket_quota_in_mb: '1024',
                # app
                mdm_java_opts: '-Xms1g -Xmx2g -XX:MaxDirectMemorySize=2g',
                # enable backup
                backupConfig_backupStagingData: 'true',
                backupConfig_redoLog: 'false', 
                cb_replicas_count: '0',
                elasticsearch_replicas_count: '0',
                elasticsearch_audit_replicas_count: '0',
                {
                    mail:
                        {
                            # disable email sending
                            host: ''
                        }
                }
                },
         kitchen_verify:
                {protractor_server: '<%= ENV.fetch('PROTRACTOR_SERVER', "104.131.129.100:4445") %>',
                whether_check_log: '<%= ENV.fetch('WHETHER_CHECK_LOG', "false") %>'
                }
        }
