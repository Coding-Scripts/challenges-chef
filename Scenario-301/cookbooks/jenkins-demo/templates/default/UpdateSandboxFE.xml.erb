<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>50</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.model.Item.Read:anonymous</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>app_branch_name</name>
          <description></description>
          <defaultValue>master</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>framework_branch_name</name>
          <description></description>
          <defaultValue>master</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>devops_branch_name</name>
          <description></description>
          <defaultValue><%= node['common_basic']['devops_branch_name'] %></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ssh_server_ip</name>
          <description>ssh ip for the sandbox env. If empty, the default value is 172.17.0.1. That should be fine in most cases</description>
          <defaultValue><%= node['jenkins_mdm']['docker_daemon_ip'] %></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>kill_existing_gulp_process</name>
          <description>Enable this, if you want to force a gulp service restart.</description>
          <defaultValue><%= node['common_basic']['kill_existing_gulp_process'] %></defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>frontend_skip_install</name>
          <description>Whether to packages installation for frontend. Like npm, bower, gulp installation. Usually we only need to run the installation for once</description>
          <defaultValue>false</defaultValue>
          <defaultValue><%= node['common_basic']['frontend_skip_install'] %></defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>frontend_skip_update_cfg</name>
          <description>Whether to skip auto update for critical config file, like app.config.js</description>
          <defaultValue><%= node['common_basic']['frontend_skip_update_cfg'] %></defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>frontend_skip_update_code</name>
          <description>Whether to skip code update. This indicates no git clone/update. We assume you update the code by yourself</description>
          <defaultValue><%= node['common_basic']['frontend_skip_update_code'] %></defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ssh_port</name>
          <description></description>
          <defaultValue>6022</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>chef_json</name>
          <description>json attributes for chef client</description>
          <defaultValue>{
 &quot;run_list&quot;: [&quot;recipe[app-mdm::frontend_only]&quot;],
 &quot;common_basic&quot;:{&quot;app_branch_name&quot;:&quot;$app_branch_name&quot;,
       &quot;framework_branch_name&quot;:&quot;$framework_branch_name&quot;,
       &quot;devops_branch_name&quot;:&quot;$devops_branch_name&quot;,
       &quot;mdm_domain_name&quot;:&quot;<%= node['common_basic']['mdm_domain_name'] %>&quot;,
       &quot;frontend_skip_install&quot;:&quot;$frontend_skip_install&quot;,
       &quot;frontend_skip_update_cfg&quot;:&quot;$frontend_skip_update_cfg&quot;,
       &quot;frontend_skip_update_code&quot;:&quot;$frontend_skip_update_code&quot;
 },
 &quot;os_basic&quot;:{&quot;enable_firewall&quot;:&quot;false&quot;}
}</defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>check_status</name>
          <description>Whether to check service status after chef update</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      <hudson.model.BooleanParameterDefinition>
          <name>kill_running_chef_update</name>
          <description>Chef update may hang or stuck on internet requests.

If this option enabled, we will kill existing chef update, before we update sandbox again.</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -ex
export STOP_CONTAINER=false
export START_COMMAND=&quot;&quot;
export POST_START_COMMAND=&quot;service elasticsearch start; service couchbase-server start; service mdm start; true&quot;
export PRE_STOP_COMMAND=&quot;service mdm stop; service couchbase-server stop; service elasticsearch stop; true&quot;
export git_repo_url=&quot;git@github.com:TOTVS/mdmdevops.git&quot;
export ssh_key_file=&quot;/var/lib/jenkins/ssh_id_rsa&quot;
export code_dir=&quot;/root/chef&quot;
export CODE_SH=&quot;/root/git_update.sh&quot;

if [ ! -f /var/lib/jenkins/.ssh/github_id_rsa ]; then
  echo &quot;ERROR: github key should be specified in UpdateJenkinsItself job&quot;
  exit 1
fi

echo &quot;Upload github key&quot;
scp -i $ssh_key_file -P $ssh_port -o StrictHostKeyChecking=no /var/lib/jenkins/.ssh/github_id_rsa mdm@$ssh_server_ip:/home/mdm/.ssh/github_id_rsa

ssh -i $ssh_key_file -p $ssh_port -o StrictHostKeyChecking=no mdm@$ssh_server_ip &quot;chmod 600 /home/mdm/.ssh/github_id_rsa&quot;

if $check_status; then
   export check_command=&quot;lsof -i tcp:3000&quot;
fi

if $kill_existing_gulp_process; then
   echo &quot;Run: service mdmfrontend stop&quot;
   ssh -i $ssh_key_file -p $ssh_port -o StrictHostKeyChecking=no mdm@$ssh_server_ip &quot;service mdmfrontend stop&quot;
fi

bash -ex /var/lib/jenkins/code/scripts/deploy_allinone.sh
      </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
